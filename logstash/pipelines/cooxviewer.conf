input {
    pipeline {
        address => cooxviewer
    }
}

filter {
    grok {
        match => {
            "message" => ['%{COOXVIEWER_TIME:[cooxviewer][timestamp]} - \[%{LOGLEVEL:[log][level]}\] : %{GREEDYDATA:[cooxviewer][message]}'] 
        }
        pattern_definitions => { 
            "COOXVIEWER_TIME" => "%{MONTHNUM}/%{MONTHDAY}/%{YEAR} %{TIME}"
        }
        remove_field => [ "message" ]
    }
    mutate{
        rename => {"[cooxviewer][message]" => "message"}
    }
    date {
        match => [ "[cooxviewer][timestamp]", "M/d/yy HH:mm:ss.SSS" ]
        remove_field => ["[cooxviewer][timestamp]"]
        timezone => "Europe/Paris"
    }
    if ("_dateparsefailure" in [tags]) or ("_grokparsefailure" in [tags]) {
        grok {
            match => { 
                "message" => ['%{COOXVIEWER_TIME:[cooxviewer][timestamp]} +%{LOGLEVEL:[log][level]} +%{GREEDYDATA:[process][thread][name]}:%{INT:[process][pid]} +- +%{GREEDYDATA:[cooxviewer][message]}'] 
            }
            pattern_definitions => {
                "COOXVIEWER_TIME" => "%{MONTHDAY} %{MONTH} %{YEAR} %{TIME}"
            }
            remove_field => [ "message" ]
        }
        mutate{
            rename => {
                "[cooxviewer][message]" => "message"
            }
        }
        date {
            match => [ "[cooxviewer][timestamp]", "dd MMM yyyy HH:mm:ss.SSS" ]
            remove_field => ["[cooxviewer][timestamp]"]
            timezone => "Europe/Paris"
        }
    }
}
output {   
    pipeline {
        send_to => collector
    }
}