input {
    pipeline {
        address => backtrace
    }
}
filter {
    grok {
        match => { 
            "message" => ['%{DSERVER}%{PROCESSNAME:[device][server]}\/%{NOTLINEBREAK:[device][instance]}\n%{STARTED}%{TIMESTAMP_ISO8601:[process][start]}\n%{ABORTED}%{TIMESTAMP_ISO8601:[process][end]}\n%{HOST}%{NOTLINEBREAK:[host][hostname]}\n%{REASON}%{NOTLINEBREAK:[error][code]}\n%{WHY}%{NOTLINEBREAK:[error][message]}\n+%{VERYGREEDYDATA:[error][stack_trace]}'] 
        }
        pattern_definitions => {
            "DSERVER" => "DServer: " 
            "STARTED" => "Started: " 
            "ABORTED" => "Aborted: "
            "HOST" =>    "Host   : "
            "REASON" =>  "Reason : "
            "WHY" =>     "Why    : "
            "PROCESSNAME" => "%{USERNAME}" 
            "NOTLINEBREAK" => "[^\n]+"
            "VERYGREEDYDATA" => "(?<message>(.|\r|\n)*)"
        }
    }
    mutate {
        update => { "message" => "%{[error][code]}: %{[error][message]}" }
        copy => { "[device][server]" => "[process][name]" }
        copy => { "[host][hostname]" => "hostname" }
        remove_field => [ "[host][name]" ]
    }
    ruby {
        code => 'event.set("[error][stack_trace]", event.get("[error][stack_trace]").split(/\n\n/))'
    }
    mutate {
        split => { "hostname" => "." }
        add_field => { "[host][name]" => "%{[hostname][0]}" }
    }
    mutate {
        remove_field => [ "hostname" ]
    }
    date {
        match => [ "[process][end]", "ISO8601" ]
        timezone => "Europe/Paris"
    }
}
output {
    pipeline {
        send_to => collector
    }
}
